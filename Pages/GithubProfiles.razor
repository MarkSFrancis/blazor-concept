@page "/github/profiles"
@using System.ComponentModel.DataAnnotations;
@using BlazorSampleApp.Services;
@using BlazorSampleApp.Models;
@inject HttpClient Http;
@inject GithubService Github;

<h1>Github Profiles</h1>

<EditForm Model="@AddProfileModel" OnValidSubmit="@AddProfile">
    <DataAnnotationsValidator />
    <ValidationsSummary />

    <div class="form-group">
        <InputText id="name" class="form-control" bind-Value="@AddProfileModel.Name" />
    </div>

    <button class="btn btn-primary" type="submit">Add</button>
</EditForm>

<hr/>

@if(Profiles.Count > 0)
{
    <div class="row align-items-stretch">
        @foreach(var profile in Profiles)
        {
            <div class="col-4 mb-3">
                <div class="card" style="min-width: 210px;height: 100%;">
                    <img src="@profile.Avatar_url" class="card-img-top" alt="Avatar">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@profile.Name</h5>
                        <p class="card-text">@profile.Bio</p>
                        <div class="mt-auto">
                            <a target="_blank" href="@profile.Html_url" class="btn btn-primary">View on GitHub</a>
                            <button class="btn btn-danger" onclick="@(() => RemoveProfile(profile.Id))">Remove</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="lead">Please add a profile to display</p>
}

@functions {
    readonly AddProfileViewModel AddProfileModel = new AddProfileViewModel();
    readonly List<GithubProfileDtoModel> Profiles = new List<GithubProfileDtoModel>();

    private async Task AddProfile()
    {
        var newProfile = await Github.GetProfile(AddProfileModel.Name);
        Profiles.Add(newProfile);
        AddProfileModel.Name = string.Empty;
    }

    private void RemoveProfile(int id)
    {
        Profiles.RemoveAll(p => p.Id == id);
    }

    class AddProfileViewModel
    {
        [Required]
        public string Name { get; set; }
    }
}

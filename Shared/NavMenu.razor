@inject Microsoft.AspNetCore.Components.IUriHelper UriHelper

<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <a class="navbar-brand" href="#">Navbar</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav">
            <li class="@PrintNavLinkClass("")">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>
                Home
                @PrintCurrent("")
                </NavLink>
            </li>
            <li class="@PrintNavLinkClass("counter")">
                <NavLink class="nav-link" href="counter" Match="NavLinkMatch.All">
                    <span class="oi oi-plus" aria-hidden="true"></span>
                    Counter
                    @PrintCurrent("counter")
                </NavLink>
            </li>
            <li class="@PrintNavLinkClass("fetchdata")">
                <NavLink class="nav-link" href="fetchdata" Match="NavLinkMatch.All">
                    <span class="oi oi-list-rich" aria-hidden="true"></span>
                    Fetch data
                    @PrintCurrent("fetchdata")
                </NavLink>
            </li>
            <li class="@PrintNavLinkClass("github/profiles")">
                <NavLink class="nav-link" href="github/profiles" Match="NavLinkMatch.All">
                    <span class="oi oi-grid-two-up" aria-hidden="true"></span>
                    GitHub profiles
                    @PrintCurrent("github/profiles")
                </NavLink>
            </li>
        </ul>
    </div>
</nav>

@functions {
    private string url = string.Empty;
    private string BaseUri;

    protected override void OnInit()
    {
        BaseUri = UriHelper.GetBaseUri();
        url = UriHelper.ToBaseRelativePath(BaseUri, UriHelper.GetAbsoluteUri());
        UriHelper.OnLocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object sender, string newUriAbsolute)
    {
        url = UriHelper.ToBaseRelativePath(BaseUri, newUriAbsolute);
        StateHasChanged();
    }

    public void Dispose()
    {
        UriHelper.OnLocationChanged -= OnLocationChanged;
    }

    private string PrintNavLinkClass(string myUrl)
    {
        return url == myUrl ? "nav-item active" : "nav-item";
    }

    private MarkupString PrintCurrent(string myUrl)
    {
        Console.WriteLine(url + " == " + myUrl + ": " + (url == myUrl));
        var srHelper = url == myUrl ? "<span class=\"sr-only\">(current)</span>" : string.Empty;

        return (MarkupString)srHelper;
    }
}
